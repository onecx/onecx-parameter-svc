---
openapi: 3.0.3
info:
  title: onecx-parameters
  description: OneCx parameters
  version: "2.0"
servers:
- url: http://onecx-parameters-svc:8080/
tags:
- name: histories
- name: parameters
paths:
  /histories:
    post:
      security:
        - oauth2: [ ocx-pa:all, ocx-pa:read ]
      tags:
      - histories
      description: Find all parameters history
      operationId: getAllParametersHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistoryCriteria'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoryPageResult'
  /histories/counts:
    post:
      security:
        - oauth2: [ ocx-pa:all, ocx-pa:read ]
      tags:
      - histories
      description: Get creation dates and counts by criteria
      operationId: getCountsByCriteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistoryCountCriteria'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryCount'
  /histories/latest:
    post:
      security:
        - oauth2: [ ocx-pa:all, ocx-pa:read ]
      tags:
      - histories
      description: Find all parameters history latest
      operationId: getAllParametersHistoryLatest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistoryCriteria'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoryPageResult'
  /histories/{id}:
    get:
      security:
        - oauth2: [ ocx-pa:all, ocx-pa:read ]
      tags:
      - histories
      description: Find parameters history by Id
      operationId: getParametersHistoryById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/History'
        "404":
          description: Not Found
  /parameters/search:
    post:
      security:
        - oauth2: [ ocx-pa:all, ocx-pa:read ]
      tags:
        - parameters
      description: Find all parameters by criteria
      operationId: searchParametersByCriteria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterSearchCriteria'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterPageResult'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /parameters:
    post:
      security:
        - oauth2: [ ocx-pa:all, ocx-pa:write ]
      tags:
      - parameters
      description: Create parameter
      operationId: createParameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterCreate'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        "404":
          description: Not Found
  /parameters/applications:
    get:
      security:
        - oauth2: [ ocx-pa:all, ocx-pa:read ]
      tags:
      - parameters
      description: Find all applications
      operationId: getAllApplications
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        "400":
          description: Bad request
  /parameters/names/{productName}:
    get:
      security:
        - oauth2: [ ocx-pa:all, ocx-pa:read ]
      tags:
      - parameters
      description: Find all parameters names
      operationId: getAllNames
      parameters:
      - name: applicationId
        in: query
        schema:
          description: The application id.
          type: string
      - name: productName
        required: true
        in: path
        schema:
          description: The product name.
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamesPageResult'
        "400":
          description: Bad request
  /parameters/{id}:
    get:
      security:
        - oauth2: [ ocx-pa:all, ocx-pa:read ]
      tags:
      - parameters
      description: Find parameter by id
      operationId: getParameterById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameter'
        "400":
          description: Bad request
        "404":
          description: Not Found
    put:
      security:
        - oauth2: [ ocx-pa:all, ocx-pa:write ]
      tags:
      - parameters
      description: Update parameter
      operationId: updateParameterValue
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterUpdate'
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameter'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        "404":
          description: Not Found
    delete:
      security:
        - oauth2: [ ocx-pa:all, ocx-pa:delete ]
      tags:
      - parameters
      description: Delete parameter
      operationId: deleteParameter
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /parameters/export:
    post:
      security:
        - oauth2: [ ocx-pa:all, ocx-pa:read ]
      tags:
        - parameters
      description: Export list of parameters
      operationId: exportParameters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportParameterRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterSnapshot'
        "404":
          description: No parameters founds
  /parameters/import:
    post:
      security:
        - oauth2: [ ocx-pa:all, ocx-pa:write ]
      tags:
        - parameters
      description: Import parameters
      operationId: importParameters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterSnapshot'
      responses:
        "200":
          description: Import result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportParameterResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://oauth.simple.api/token
          scopes:
            ocx-pa:all: Grants access to all operations
            ocx-pa:read: Grants read access
            ocx-pa:write: Grants write access
            ocx-pa:delete: Grants access to delete operations
  schemas:
    ExportParameterRequest:
      type: object
      properties:
        productNames:
          type: array
          uniqueItems: true
          items:
            type: string
    ParameterSnapshot:
      type: object
      properties:
        id:
          type: string
          minLength: 10
          description: ID of the request
        created:
          $ref: '#/components/schemas/OffsetDateTime'
        products:
          type: object
          nullable: false
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/EximParameter'
    ImportParameterResponse:
      type: object
      properties:
        id:
          type: string
          minLength: 10
          description: ID of the request
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/ImportParameterResponseStatus'
    ImportParameterResponseStatus:
      type: string
      enum:
        - UPDATE
        - CREATED
        - SKIP
    ParameterCreate:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        applicationId:
          type: string
        productName:
          type: string
        value:
          type: object
        description:
          type: string
    Parameter:
      type: object
      properties:
        id:
          type: string
        modificationCount:
          format: int32
          type: integer
        creationDate:
          format: date-time
          type: string
          example: 2022-03-10T12:15:50-04:00
        creationUser:
          type: string
        modificationDate:
          format: date-time
          type: string
          example: 2022-03-10T12:15:50-04:00
        modificationUser:
          type: string
        displayName:
          type: string
        description:
          type: string
        applicationId:
          type: string
        productName:
          type: string
        name:
          type: string
        value:
          type: object
        importValue:
          type: object
        operator:
          type: boolean
        isInHistory:
          type: boolean
    EximParameter:
      type: object
      properties:
        displayName:
          type: string
        description:
          type: string
        applicationId:
          type: string
        productName:
          type: string
        name:
          type: string
        value:
          type: object
        importValue:
          type: object
        operator:
          type: boolean
    History:
      type: object
      properties:
        id:
          type: string
        modificationCount:
          format: int32
          type: integer
        creationDate:
          format: date-time
          type: string
          example: 2022-03-10T12:15:50-04:00
        creationUser:
          type: string
        modificationDate:
          format: date-time
          type: string
          example: 2022-03-10T12:15:50-04:00
        modificationUser:
          type: string
        applicationId:
          type: string
        productName:
          type: string
        name:
          type: string
        usedValue:
          type: object
        defaultValue:
          type: object
        instanceId:
          type: string
        count:
          type: integer
          format: int64
        start:
          format: date-time
          type: string
          example: 2022-03-10T12:15:50-04:00
        end:
          format: date-time
          type: string
          example: 2022-03-10T12:15:50-04:00
    HistoryCriteria:
      type: object
      properties:
        applicationId:
          type: string
        productName:
          type: string
        name:
          type: string
        pageNumber:
          type: integer
          format: int32
          default: 0
        pageSize:
          type: integer
          format: int32
          default: 100
    HistoryPageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/History'
    ParameterPageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
    ParameterUpdate:
      type: object
      required:
        - modificationCount
      properties:
        value:
          type: object
        displayName:
          type: string
        description:
          type: string
        modificationCount:
          format: int32
          type: integer
    Product:
      type: object
      properties:
        productName:
          type: string
        applications:
          type: array
          items:
            type: string
    NamesPageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            type: string
    HistoryCountCriteria:
      type: object
      properties:
        applicationId:
          type: string
        productName:
          type: string
        name:
          type: string
        pageNumber:
          format: int32
          default: 0
          type: integer
        pageSize:
          format: int32
          default: 100
          type: integer
        type:
          type: array
          items:
            type: string
    HistoryCount:
      type: object
      properties:
        creationDate:
          format: date-time
          type: string
          example: 2022-03-10T12:15:50
        count:
          format: int64
          type: integer
    ParameterSearchCriteria:
      type: object
      properties:
        applicationId:
          type: string
        productName:
          type: string
        name:
          type: string
        pageNumber:
          format: int32
          description: The number of page
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 100
          type: integer
    OffsetDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
    ProblemDetailResponse:
      type: object
      properties:
        errorCode:
          type: string
        detail:
          type: string
        params:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailParam'
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailInvalidParam'
    ProblemDetailParam:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ProblemDetailInvalidParam:
      type: object
      properties:
        name:
          type: string
        message:
          type: string